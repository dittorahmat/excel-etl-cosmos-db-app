# Azure Resource Configuration
# --------------------------
# Replace with your Azure Resource Group and Location
AZURE_RESOURCE_GROUP=my-excel-etl-rg
AZURE_LOCATION=eastus  # e.g., eastus, westus, westeurope

# Cosmos DB Configuration
# ---------------------
# Get these values from Azure Portal > Cosmos DB > Your Account > Keys
AZURE_COSMOSDB_ACCOUNT=your-cosmosdb-account-name
AZURE_COSMOSDB_KEY=your-cosmosdb-primary-key
AZURE_COSMOSDB_ENDPOINT=https://your-cosmosdb-account-name.documents.azure.com:443/
AZURE_COSMOSDB_DATABASE=excel-data
AZURE_COSMOSDB_CONTAINER=excel-records

# Storage Account Configuration
# ---------------------------
# Get these values from Azure Portal > Storage Account > Your Account > Access Keys
AZURE_STORAGE_ACCOUNT=your-storage-account-name
AZURE_STORAGE_KEY=your-storage-account-key
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=your-storage-account;AccountKey=your-storage-key;EndpointSuffix=core.windows.net
AZURE_STORAGE_CONTAINER=excel-uploads

# Application Settings
# ------------------
# Set the environment (development, staging, production)
NODE_ENV=development

# Application port (for local development)
PORT=3001

# CORS Configuration
# ----------------
# Add your frontend URLs (comma-separated for multiple origins)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Logging level (error, warn, info, debug, trace)
LOG_LEVEL=info

# Session secret (generate a strong secret for production)
# You can generate one with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'));"
SESSION_SECRET=generate-a-strong-secret-here

# File Upload Configuration
# -----------------------
# Maximum file size in MB
MAX_FILE_SIZE_MB=10

# Allowed MIME types for file uploads (comma-separated)
ALLOWED_FILE_TYPES=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel

# Azure AD App Registration (if using authentication)
# ------------------------------------------------
# VITE_AZURE_CLIENT_ID=your_client_id_here
# VITE_AZURE_TENANT_ID=your_tenant_id_here
# VITE_AZURE_AUTHORITY=https://login.microsoftonline.com/your_tenant_id
# VITE_API_SCOPE=api://your_api_client_id/access_as_user

# Note: For production, make sure to:
# 1. Never commit this file to version control (add to .gitignore)
# 2. Use environment variables or Azure Key Vault for production secrets
# 3. Set proper CORS policies for your production domains
# 4. Use proper HTTPS configuration in production
# 5. Set appropriate security headers

# Function App Configuration
AZURE_FUNCTION_APP_NAME=your-function-app-name
AZURE_FUNCTION_KEY=your-function-key
AZURE_FUNCTION_ENDPOINT=https://your-function-app-name.azurewebsites.net

# Application Settings
# ------------------
# Set the environment (development, staging, production)
NODE_ENV=development

# Application port (for local development)
PORT=3000

# CORS (comma-separated list of allowed origins)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# Logging level (error, warn, info, debug, trace)
LOG_LEVEL=info

# Session secret (generate a strong secret for production)
SESSION_SECRET=your-session-secret

# Optional: Application Insights
# APPLICATION_INSIGHTS_CONNECTION_STRING=InstrumentationKey=your-instrumentation-key;IngestionEndpoint=https://your-region.in.applicationinsights.azure.com/

# Note: For production, make sure to:
# 1. Never commit the actual .env file to version control
# 2. Set appropriate values for all variables
# 3. Use Azure Key Vault or similar for production secrets
# 4. Set proper CORS policies for your frontend URLs
# 5. Use environment-specific configuration files for different environments

# Azure AD App Registration
VITE_AZURE_CLIENT_ID=your_client_id_here
VITE_AZURE_TENANT_ID=your_tenant_id_here

# Optional: Add these if you're using a custom domain
# VITE_AZURE_AUTHORITY=https://login.microsoftonline.com/your_tenant_id
# VITE_API_SCOPE=api://your_api_client_id/access_as_user
