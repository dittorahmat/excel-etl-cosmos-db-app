name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch:

# Environment variables for the workflow
env:
  # Source code locations
  APP_LOCATION: "/"  # Root of the repository
  OUTPUT_LOCATION: "dist"  # Built files location

# Required permissions for the workflow
permissions:
  contents: read
  pull-requests: write
  issues: write
  deployments: write

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build Application
        run: npm run build:client
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_AZURE_AD_CLIENT_ID: ${{ secrets.VITE_AZURE_AD_CLIENT_ID }}
          VITE_AZURE_AD_TENANT_ID: ${{ secrets.VITE_AZURE_AD_TENANT_ID }}
          VITE_AZURE_AD_REDIRECT_URI: ${{ secrets.VITE_AZURE_AD_REDIRECT_URI }}

      - name: List files and sizes at repository root
        run: |
          ls -lhA /home/runner/work/excel-etl-cosmos-db-app/excel-etl-cosmos-db-app/

      - name: Deploy to Azure Static Web Apps
        # Only run this step on a push event to the main branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: Azure/static-web-apps-deploy@v1
        with:
          # Make sure you have created this secret in your GitHub repository settings
          azure_static_web_apps_api_token: ${{ secrets.AZURE_SWA_DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: true  # We're building in a separate step
          skip_api_build: true  # No API in this project