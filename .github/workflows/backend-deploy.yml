name: Deploy Backend to Azure App Service

on:
  push:
    branches: [main]
    paths:
      - 'server/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  AZURE_WEBAPP_NAME: 'excel-etl-backend-378680'
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP || 'IESR-DB' }}

jobs:
  lint-and-test:
    name: Lint and Test Backend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      working-directory: ./server
      run: |
        npm ci --include=dev
        npx tsc --version

    - name: Run backend tests
      working-directory: ./server
      run: npm test

    - name: Run Cosmos DB connection test
      working-directory: ./server
      env:
        NODE_OPTIONS: --experimental-vm-modules
        COSMOS_ENDPOINT: ${{ secrets.AZURE_COSMOS_ENDPOINT }}
        COSMOS_KEY: ${{ secrets.AZURE_COSMOS_KEY }}
        COSMOS_DATABASE: ${{ secrets.AZURE_COSMOS_DATABASE }}
        COSMOS_CONTAINER: ${{ secrets.AZURE_COSMOS_CONTAINER }}
      run: |
        echo "Testing Cosmos DB connection..."
        npx tsx scripts/test-cosmos-direct.ts

  deploy:
    name: Deploy to Azure App Service
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install build dependencies
        working-directory: ./server
        run: |
          npm ci --include=dev
          npx tsc --version

      - name: Build and package server
        working-directory: ./server
        env:
          NODE_ENV: production
        run: |
          # Clean previous builds
          rm -rf dist deployment
          
          # Build TypeScript
          npx tsc --outDir ./dist --diagnostics
          
          # Create deployment directory
          mkdir -p deployment
          
          # Copy built files
          cp -r dist deployment/
          cp package*.json deployment/
          
          # Install production dependencies
          cd deployment
          npm install --omit=dev
          
          # Create deployment zip
          cd ..
          mkdir -p deployment_root
          mv deployment/* deployment_root/
          cd deployment_root
          zip -r ../../deployment.zip .
          cd ..
          
          # Show zip contents
          echo "Deployment package contents:"
          unzip -l ../../deployment.zip | head -20

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ github.workspace }}/deployment.zip
          app-settings: |
            [
              {"name": "WEBSITE_RUN_FROM_PACKAGE", "value": "1"},
              {"name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "0"},
              {"name": "WEBSITE_NODE_DEFAULT_VERSION", "value": "~20"},
              {"name": "NODE_ENV", "value": "production"},
              {"name": "WEBSITES_PORT", "value": "8080"},
              {"name": "WEBSITES_CONTAINER_START_TIME_LIMIT", "value": "600"}
            ]

      - name: Verify deployment
        run: |
          echo "âœ… Backend deployment completed successfully!"
          echo ""
          echo "App URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          echo ""
          echo "If you encounter any issues, please check:"
          echo "1. Azure Portal -> App Service -> Log stream"
          echo "2. Application settings in the Azure Portal"
          echo "3. GitHub Actions logs for any deployment errors"
