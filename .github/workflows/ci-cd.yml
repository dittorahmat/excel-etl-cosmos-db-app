name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  AZURE_STATIC_WEB_APP_NAME: ${{ secrets.AZURE_STATIC_WEB_APP_NAME }}
  
jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install root dependencies
      working-directory: ./
      run: |
        npm ci --include=dev
        npx tsc --version
        npx eslint --version
    
    - name: Install server dependencies
      working-directory: ./server
      run: npm ci --include=dev
    
    - name: Lint frontend
      working-directory: ./
      run: npx eslint .
    
    - name: Lint backend
      working-directory: ./server
      run: npx eslint . --ext .ts
    
    - name: Run frontend tests
      working-directory: ./
      run: npm test
    
    - name: Run backend tests
      working-directory: ./server
      run: npm test
    
    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/coverage-final.json,./server/coverage/coverage-final.json
        fail_ci_if_error: false

  deploy-frontend:
    name: Deploy Frontend
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build frontend
      run: npm run build
    
    - name: Deploy to Azure Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: 'upload'
        app_location: '/'
        output_location: 'dist'

  deploy-backend:
    name: Deploy Backend
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      working-directory: ./server
      run: npm ci --production
    
    - name: Build backend
      working-directory: ./server
      run: npm run build
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: ./server

    - name: Log deployment status to Azure Monitor
      if: always()
      uses: Azure/cli@v1.0.0
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az monitor metrics alert create \
            --name "DeploymentSuccess" \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --scopes ${{ secrets.AZURE_WEBAPP_RESOURCE_ID }} \
            --condition "count deployment_http_2xx > 0 where deployment_status == 'Success'" \
            --description "Track successful deployments" \
            --evaluation-frequency 5m \
            --window-size 5m \
            --severity 0
