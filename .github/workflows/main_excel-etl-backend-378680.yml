# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - excel-etl-backend-378680

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'
      - '.github/workflows/main_excel-etl-backend-378680.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  AZURE_WEBAPP_NAME: 'excel-etl-backend-378680'
  AZURE_WEBAPP_PACKAGE_PATH: 'server/.'
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP || 'IESR-DB' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install server dependencies
      working-directory: server
      run: |
        npm ci --production=false
        
    - name: Build the app
      working-directory: server
      run: |
        npm run build
        
    - name: Run Cosmos DB connection test
      working-directory: server
      env:
        NODE_OPTIONS: --experimental-vm-modules
        COSMOS_ENDPOINT: ${{ secrets.AZURE_COSMOS_ENDPOINT }}
        COSMOS_KEY: ${{ secrets.AZURE_COSMOS_KEY }}
        COSMOS_DATABASE: ${{ secrets.AZURE_COSMOS_DATABASE }}
        COSMOS_CONTAINER: ${{ secrets.AZURE_COSMOS_CONTAINER }}
      run: |
        echo "Testing Cosmos DB connection..."
        npx tsx scripts/test-cosmos-direct.ts
        
    - name: Install production dependencies
      working-directory: server
      run: |
        npm ci --omit=dev
        
    - name: Create deployment artifact
      run: |
        mkdir -p deployment
        # Copy package files and built files
        cp -r server/package*.json deployment/
        cp -r dist/server deployment/
        
        # Create a new package.json in the root of the deployment
        echo '{
          "name": "excel-etl-backend",
          "version": "1.0.0",
          "description": "Excel to Cosmos DB ETL Backend",
          "main": "server/server.js",
          "scripts": {
            "start": "node server/server.js"
          },
          "dependencies": {}
        }' > deployment/package.json
        
        # Install only production dependencies in the deployment directory
        cd deployment
        npm install --omit=dev
        cd ..
        
    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: deployment
        retention-days: 1

  deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app
        
    - name: 'Check if app is stopped and start it'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          # Parse publish profile to get resource group if not set
          if [ -z "${{ env.RESOURCE_GROUP }}" ]; then
            echo "Resource group not set, extracting from publish profile..."
            RESOURCE_GROUP=$(echo "${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}" | jq -r '.resourceGroup')
            echo "Extracted resource group: $RESOURCE_GROUP"
            echo "RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_ENV
          fi
          
          # Check if app is stopped and start it
          echo "Checking status of ${{ env.AZURE_WEBAPP_NAME }}..."
          STATUS=$(az webapp show --name "${{ env.AZURE_WEBAPP_NAME }}" --resource-group "${{ env.RESOURCE_GROUP }}" --query "state" -o tsv 2>/dev/null || echo "Unknown")
          echo "Current status: $STATUS"
          
          if [ "$STATUS" != "Running" ]; then
            echo "Starting the app service..."
            az webapp start --name "${{ env.AZURE_WEBAPP_NAME }}" --resource-group "${{ env.RESOURCE_GROUP }}" || echo "Failed to start the app service, continuing with deployment..."
          fi
          
    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'Production'
        package: .
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        
    - name: 'Verify deployment and start if needed'
      uses: azure/CLI@v1
      with:
        inlineScript: |
          echo "Verifying deployment status..."
          STATUS=$(az webapp show --name "${{ env.AZURE_WEBAPP_NAME }}" --resource-group "${{ env.RESOURCE_GROUP }}" --query "state" -o tsv)
          echo "App Service status after deployment: $STATUS"
          
          if [ "$STATUS" != "Running" ]; then
            echo "Starting the app service after deployment..."
            az webapp start --name "${{ env.AZURE_WEBAPP_NAME }}" --resource-group "${{ env.RESOURCE_GROUP }}" || echo "Warning: Failed to start the app service"
          fi
          
          echo "âœ… Deployment verification complete"
          echo "Your app should be available at: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          echo ""
          echo "If you encounter any issues, please check:"
          echo "1. The GitHub Actions workflow logs"
          echo "2. The Azure App Service logs in the Azure Portal"
