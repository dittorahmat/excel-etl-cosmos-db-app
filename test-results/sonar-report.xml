<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="server/test/apiKeyAuth.integration.test.ts">
    <testCase name="API Key Authentication Integration - should return 401 if no API key is provided" duration="84" />
    <testCase name="API Key Authentication Integration - should return 401 for invalid API key format" duration="10" />
    <testCase name="API Key Authentication Integration - should return 200 for valid API key in header" duration="16" />
    <testCase name="API Key Authentication Integration - should return 401 for revoked API key" duration="8" />
    <testCase name="API Key Authentication Integration - should return 401 for invalid IP address" duration="8" />
    <testCase name="API Key Authentication Integration - should return 401 for non-existent API key" duration="15" />
  </file>
  <file path="server/test/apiKeyAuth.middleware.auth.test.ts">
    <testCase name="API Key Authentication Middleware - Authentication Flow - should skip API key validation if user is already authenticated" duration="12" />
    <testCase name="API Key Authentication Middleware - Authentication Flow - should attach API key info to request when validation succeeds" duration="16" />
    <testCase name="API Key Authentication Middleware - Authentication Flow - should call next with error when API key validation fails" duration="29" />
    <testCase name="API Key Authentication Middleware - Authentication Flow - should handle IP address restrictions" duration="18" />
  </file>
  <file path="server/test/apiKeyAuth.middleware.basic.test.ts">
    <testCase name="API Key Authentication Middleware - Basic Validation - should call next with error if no API key is provided" duration="19" />
    <testCase name="API Key Authentication Middleware - Basic Validation - should validate API key from Authorization header" duration="9" />
    <testCase name="API Key Authentication Middleware - Basic Validation - should validate API key from query parameter" duration="9" />
    <testCase name="API Key Authentication Middleware - Basic Validation - should prioritize Authorization header over query parameter" duration="7" />
  </file>
  <file path="server/test/apiKeyAuth.middleware.concurrent.test.ts">
    <testCase name="API Key Authentication Middleware - Concurrent Validation - should handle concurrent API key validations" duration="18" />
    <testCase name="API Key Authentication Middleware - Concurrent Validation - should handle concurrent validation with rate limiting" duration="13" />
  </file>
  <file path="server/test/apiKeyAuth.middleware.error.test.ts">
    <testCase name="API Key Authentication Middleware - Error Handling - should handle repository validation errors" duration="16" />
    <testCase name="API Key Authentication Middleware - Error Handling - should handle invalid API key format in header" duration="7" />
    <testCase name="API Key Authentication Middleware - Error Handling - should handle empty API key in header" duration="4" />
    <testCase name="API Key Authentication Middleware - Error Handling - should handle invalid API key in query parameter" duration="7" />
    <testCase name="API Key Authentication Middleware - Error Handling - should handle expired API key" duration="5" />
    <testCase name="API Key Authentication Middleware - Error Handling - should handle inactive API key" duration="4" />
  </file>
  <file path="server/test/apiKeyAuth.validation.test.ts">
    <testCase name="API key validation with IP restrictions - should reject empty API key" duration="13" />
    <testCase name="API key validation with IP restrictions - should reject invalid API key format" duration="3" />
    <testCase name="API key validation with IP restrictions - should reject non-existent API key" duration="2" />
    <testCase name="API key validation with IP restrictions - should reject revoked API key" duration="7" />
    <testCase name="API key validation with IP restrictions - should validate active API key" duration="3" />
    <testCase name="API key validation with IP restrictions - should reject request from unauthorized IP" duration="3" />
    <testCase name="API key validation with IP restrictions - should allow request from authorized IP" duration="2" />
  </file>
  <file path="server/test/apiKeyRepository.test.ts">
    <testCase name="ApiKeyRepository - createApiKey - should create a new API key" duration="11" />
    <testCase name="ApiKeyRepository - update - should update an existing API key" duration="12" />
    <testCase name="ApiKeyRepository - revokeApiKey - should revoke an existing API key" duration="4" />
    <testCase name="ApiKeyRepository - validateApiKey - should validate a correct API key" duration="8" />
    <testCase name="ApiKeyRepository - validateApiKey - should respect IP restrictions" duration="10" />
  </file>
  <file path="server/test/apiKeyRevocation.test.ts">
    <testCase name="API Key Revocation - revokeApiKey - should successfully revoke an active API key" duration="35" />
    <testCase name="API Key Revocation - revokeApiKey - should return false when key is not found" duration="4" />
    <testCase name="API Key Revocation - revokeApiKey - should return false when user does not own the key" duration="5" />
    <testCase name="API Key Revocation - revokeApiKey - should handle errors during key revocation" duration="16" />
    <testCase name="API Key Revocation - revokeApiKey - should handle already revoked keys" duration="6" />
  </file>
  <file path="server/test/apiKeyRoutes.test.ts">
    <testCase name="API Key Routes - should have tests" duration="5" />
  </file>
  <file path="server/test/data.test.ts">
    <testCase name="Data API - should return data with status 200 when authenticated" duration="82" />
    <testCase name="Data API - should filter data by date range" duration="17" />
    <testCase name="Data API - should filter data by category" duration="10" />
    <testCase name="Data API - should limit results when limit parameter is provided" duration="13" />
  </file>
  <file path="server/test/excelParser.test.ts">
    <testCase name="processExcelFile - should successfully process a valid Excel file" duration="13" />
    <testCase name="processExcelFile - should return an error for an invalid Excel file format" duration="6" />
    <testCase name="processExcelFile - should return an error if no worksheets are found" duration="1" />
    <testCase name="processExcelFile - should return an error if no data rows are found (only headers)" duration="1" />
    <testCase name="processExcelFile - should handle null and undefined cell values correctly" duration="2" />
    <testCase name="processExcelFile - should return a general error if an unexpected error occurs during processing" duration="2" />
  </file>
  <file path="server/test/rateLimit.test.ts">
    <testCase name="Rate Limiting Middleware - should allow requests under the limit" duration="154" />
    <testCase name="Rate Limiting Middleware - should block requests over the limit" duration="36" />
    <testCase name="Rate Limiting Middleware - should reset the counter after the window expires" duration="28" />
    <testCase name="Rate Limiting Middleware - should use API key as the rate limit key when available" duration="28" />
    <testCase name="Rate Limiting Middleware - should skip rate limiting when skip function returns true" duration="32" />
  </file>
  <file path="server/test/sanity.test.ts">
    <testCase name="Sanity Test - should pass a basic test" duration="5" />
    <testCase name="Sanity Test - should have access to global test utilities" duration="2" />
    <testCase name="Sanity Test - should have access to Node.js globals" duration="1" />
    <testCase name="Sanity Test - should have access to test environment variables" duration="1" />
  </file>
  <file path="server/test/server.createApp.test.ts">
    <testCase name="createApp - should create an express app" duration="29" />
    <testCase name="createApp - Authentication Middleware - should apply authentication middleware to /api/keys when AUTH_ENABLED is true" duration="7" />
    <testCase name="createApp - Authentication Middleware - should not apply rate limiting in development" duration="5" />
    <testCase name="createApp - Authentication Middleware - should NOT apply authentication middleware to /api/keys when AUTH_ENABLED is false" duration="6" />
  </file>
  <file path="server/test/server.test.ts">
    <testCase name="Server - Health Check - should return 200 and status ok for /health endpoint" duration="51" />
    <testCase name="Server - Health Check - should include environment information in the response" duration="9" />
    <testCase name="Server - 404 Handler - should return 404 for non-existent routes" duration="15" />
    <testCase name="Server - 404 Handler - should handle various HTTP methods for non-existent routes" duration="56" />
    <testCase name="Server - Error Handling - should return 500 for unhandled errors" duration="11" />
  </file>
  <file path="server/test/type-tests/global-types.test.ts">
    <testCase name="Global Type Definitions - should have Node.js globals available" duration="6" />
    <testCase name="Global Type Definitions - should have test globals available" duration="1" />
    <testCase name="Global Type Definitions - should have proper DOM types in frontend files" duration="1" />
  </file>
  <file path="server/test/upload.test.ts">
    <testCase name="Upload Route V2 - File Type Validation - should accept a valid .xlsx file" duration="99" />
    <testCase name="Upload Route V2 - File Type Validation - should accept a valid .csv file" duration="26" />
    <testCase name="Upload Route V2 - File Type Validation - should accept .xlsx with application/octet-stream if extension is correct" duration="31" />
    <testCase name="Upload Route V2 - File Type Validation - should reject an invalid file type" duration="20" />
    <testCase name="Upload Route V2 - File Type Validation - should reject an unsupported Excel file type (.doc)" duration="14" />
    <testCase name="Upload Route V2 - POST / - should return 400 if no file is uploaded" duration="14" />
    <testCase name="Upload Route V2 - POST / - should successfully upload a valid file" duration="15" />
    <testCase name="Upload Route V2 - POST / - should return 500 if file processing fails" duration="40" />
    <testCase name="Upload Route V2 - POST / - should handle generic application/octet-stream with correct extension" duration="24" />
    <testCase name="Upload Route V2 - POST / - should return 400 for unsupported file type" duration="13" />
    <testCase name="Upload Route V2 - POST / - should handle general errors in middleware" duration="19" />
    <testCase name="Upload Route V2 - GET /health - should return 200 and status ok" duration="17" />
    <testCase name="Upload Route V2 - Authentication - should apply authentication middleware when AUTH_ENABLED is true" duration="25" />
  </file>
</testExecutions>